---
# Source: fiter-app/charts/community-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fineract-community-app
  namespace: fineract-dev
  labels:
    app.kubernetes.io/name: community-app
    app.kubernetes.io/instance: fineract
    app_name: community-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: community-app
      app.kubernetes.io/instance: fineract
      app_name: community-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: community-app
        app.kubernetes.io/instance: fineract
        app_name: community-app
    spec:
      serviceAccountName: fineract-community-app
      volumes:
      containers:
        - name: community-app
          image: "seyio/openmf-webapp:1.9.0"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          env:
            - name: PLACEHOLDER
              value: TEST
            - name: "DOLLAR"
              value: "$"
            - name: "FINERACT_API_URL"
              value: "https://sumasparatimanager.mundosumas.com"
            - name: "FINERACT_API_URLS"
              value: "https://sumasparatimanager.mundosumas.com"
            - name: "FINERACT_BASE_URL"
              value: "/fineract-provider"
            - name: "FINERACT_DOMAIN"
              value: "su.fineract.io"
            - name: "FINERACT_PLATFORM_TENANT_IDENTIFIER"
              value: "default"
            - name: "FINERACT_PROXY_URL"
              value: "http://fineract:8080"
            - name: "MIFOS_DEFAULT_CHAR_DELIMITER"
              value: ","
            - name: "MIFOS_DEFAULT_LANGUAGE"
              value: "en-US"
            - name: "MIFOS_PRELOAD_CLIENTS"
              value: "false"
            - name: "MIFOS_SUPPORTED_LANGUAGES"
              value: "cs-CS,de-DE,en-US,es-MX,fr-FR,it-IT,ko-KO,lt-LT,lv-LV,ne-NE,pt-PT,sw-SW"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 120
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 512m
              memory: 512Mi
            requests:
              cpu: 256m
              memory: 256Mi
